# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ActiveProductInput {
  productId: ID!
}

input ActiveUserInput {
  email: String!
}

input AuthInput {
  email: String!
  password: String!
}

input CancelOrderInput {
  orderId: ID!
}

input CreateOrderInput {
  amount: Float!
  productId: ID!
}

input CreateProductInput {
  category: ProductCategory!
  description: String
  name: String!
  price: Float!
}

input CreateStockInput {
  amount: Float!
  productId: ID!
}

input CreateUserInput {
  document: String!
  email: String!
  name: String!
  password: String!
  phone: String!
  role: UserRoleInput!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DeleteProductInput {
  productId: ID!
}

input ListOrdersInput {
  customerIdEquals: ID
  isCanceled: Boolean
  productIdEquals: ID
  sellerIdEquals: ID
}

input ListOrdersToCustomerInput {
  isCanceled: Boolean
  productIdEquals: ID
  sellerIdEquals: ID
}

input ListOrdersToSellerInput {
  customerIdEquals: ID
  isCanceled: Boolean
  productIdEquals: ID
}

input ListProductsInput {
  categoryEquals: ProductCategory
  nameContains: String
  priceGte: Float
  priceLte: Float
  userIdEquals: ID
}

input ListUsersInput {
  emailContains: String
  nameContains: String
  roleEquals: UserRoleInput
}

type Mutation {
  activeProduct(activeProductInput: ActiveProductInput!): Boolean!
  activeUser(activeUserInput: ActiveUserInput!): Boolean!
  auth(authInput: AuthInput!): Boolean!
  cancelOrder(cancelOrderInput: CancelOrderInput!): Boolean!
  createOrder(createOrderInput: CreateOrderInput!): OrderModel!
  createProduct(createProductInput: CreateProductInput!): ProductModel!
  createStock(createStockInput: CreateStockInput!): StockModel!
  createUser(createUserInput: CreateUserInput!): UserModel!
  deleteProduct(deleteProductInput: DeleteProductInput!): Boolean!
  deleteUser: Boolean!
  logout: Boolean!
  updateOrder(updateOrderInput: UpdateOrderInput!): OrderModel!
  updateProduct(updateProductInput: UpdateProductInput!): ProductModel!
  updateStock(updateStockInput: UpdateStockInput!): StockModel!
  updateUser(updateUserInput: UpdateUserInput!): UserModel!
}

type OrderModel {
  amount: Float!
  canceledAt: DateTime
  createdAt: DateTime!
  customer: UserModel!
  id: ID!
  price: Float!
  product: ProductModel!
  seller: UserModel!
  updatedAt: DateTime!
}

"""Available products categories"""
enum ProductCategory {
  BOOKS
  ELECTRONICS
  FASHION
  GAMES
  SPORTS
}

type ProductModel {
  category: ProductCategory!
  createdAt: DateTime!
  deletedAt: DateTime
  description: String
  id: ID!
  name: String!
  orders: [OrderModel!]!
  price: Float!
  stock: StockModel
  updatedAt: DateTime!
  user: UserModel!
}

type Query {
  listOrders(listOrdersInput: ListOrdersInput): [OrderModel!]!
  listOrdersToCustomer(listOrdersToCustomerInput: ListOrdersToCustomerInput): [OrderModel!]!
  listOrdersToSeller(listOrdersToSellerInput: ListOrdersToSellerInput): [OrderModel!]!
  listProducts(listProductsInput: ListProductsInput): [ProductModel!]!
  listStocks: [StockModel!]!
  listUsers(listUsersInput: ListUsersInput): [UserModel!]!
  showOrder(showOrderInput: ShowOrderInput!): OrderModel!
  showProduct(showProductInput: ShowProductInput!): ProductModel!
  showStockByProductId(showStockInput: ShowStockInput!): StockModel!
  showUser: UserModel!
}

input ShowOrderInput {
  orderId: ID!
}

input ShowProductInput {
  productId: ID!
}

input ShowStockInput {
  productId: ID!
}

type StockModel {
  amount: Float!
  createdAt: DateTime!
  deletedAt: DateTime
  id: ID!
  product: ProductModel!
  updatedAt: DateTime!
}

input UpdateOrderInput {
  amount: Float!
  orderId: ID!
  productId: ID!
}

input UpdateProductInput {
  category: ProductCategory!
  description: String
  name: String!
  price: Float!
  productId: ID!
}

input UpdateStockInput {
  amount: Float!
  productId: ID!
}

input UpdateUserInput {
  document: String!
  email: String!
  name: String!
  password: String!
  phone: String!
}

type UserModel {
  createdAt: DateTime!
  deletedAt: DateTime
  document: String!
  email: String!
  id: ID!
  name: String!
  orders: [OrderModel!]!
  phone: String!
  products: [ProductModel!]!
  role: UserRoleModel!
  updatedAt: DateTime!
}

"""Available user roles on input"""
enum UserRoleInput {
  CUSTOMER
  SELLER
}

"""Available user roles on model"""
enum UserRoleModel {
  ADMIN
  CUSTOMER
  SELLER
}
